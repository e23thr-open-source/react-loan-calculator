name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Grants

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch all history for changelog generation

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Update Changelog
      run: npm run changelog:update

    - name: Commit updated changelog
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add CHANGELOG.md || echo "No changelog changes to commit"
        git diff --staged --quiet || git commit -m "docs: update changelog for ${GITHUB_REF#refs/tags/}"

    - name: Run tests
      run: npm test

    - name: Build
      run: npm run build

    - name: Publish to npm
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Extract release notes
      id: release_notes
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

        # Extract the changelog for this version
        RELEASE_NOTES=$(awk -v version="$VERSION" '
          /^## \[/ {
            if (match($0, /\[([0-9]+\.[0-9]+\.[0-9]+[^]]*)\]/, arr) && arr[1] == version) {
              found=1
              next
            } else if (found) {
              exit
            }
          }
          found && /^## \[/ { exit }
          found { print }
        ' CHANGELOG.md | sed '/^$/d' | head -20)

        if [ -z "$RELEASE_NOTES" ]; then
          RELEASE_NOTES="Release version $VERSION

        See [CHANGELOG.md](https://github.com/e23thr-open-source/react-loan-calculator/blob/main/CHANGELOG.md) for full details."
        fi

        # Save multiline content to output
        {
          echo "RELEASE_NOTES<<EOF"
          echo "$RELEASE_NOTES"
          echo "EOF"
        } >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.release_notes.outputs.VERSION }}
        body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
        draft: false
        prerelease: false
